[{"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\index.js":"1","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\App.js":"2","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\cityList\\index.js":"3","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Home\\index.js":"4","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\index.js":"5","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\NotFound\\index.js":"6","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Index\\index.js":"7","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Profile\\index.js":"8","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\News\\index.js":"9","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\MyMap\\index.js":"10","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\utils\\index.js":"11","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\NavHeader\\index.js":"12","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\Filter\\index.js":"13","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\FilterFooter\\index.js":"14","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterTitle\\index.js":"15","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterPicker\\index.js":"16"},{"size":357,"mtime":1608437048057,"results":"17","hashOfConfig":"18"},{"size":1225,"mtime":1608426977438,"results":"19","hashOfConfig":"18"},{"size":6714,"mtime":1608535771441,"results":"20","hashOfConfig":"18"},{"size":2250,"mtime":1608196477627,"results":"21","hashOfConfig":"18"},{"size":253,"mtime":1608795844011,"results":"22","hashOfConfig":"18"},{"size":505,"mtime":1608205894024,"results":"23","hashOfConfig":"18"},{"size":7923,"mtime":1608536230056,"results":"24","hashOfConfig":"18"},{"size":212,"mtime":1608191924155,"results":"25","hashOfConfig":"18"},{"size":212,"mtime":1608191959841,"results":"26","hashOfConfig":"18"},{"size":8134,"mtime":1608821522653,"results":"27","hashOfConfig":"18"},{"size":967,"mtime":1608435240883,"results":"28","hashOfConfig":"18"},{"size":779,"mtime":1608559203409,"results":"29","hashOfConfig":"18"},{"size":2952,"mtime":1608811346831,"results":"30","hashOfConfig":"18"},{"size":897,"mtime":1561599781702,"results":"31","hashOfConfig":"18"},{"size":849,"mtime":1608799198663,"results":"32","hashOfConfig":"18"},{"size":599,"mtime":1608811357501,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"jd4lc3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\index.js",[],["74","75"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\App.js",["76","77"],"\n// import { Button } from 'antd-mobile';\nimport { HashRouter, BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom'\n// <Switch>是唯一的因为它仅仅只会渲染一个路径。相比之下（不使用<Switch>包裹的情况下），每一个被location匹配到的<Route>将都会被渲染。\nimport Home from './pages/Home/index'\nimport cityList from './pages/cityList/index'\nimport NotFound from './pages/NotFound'\nimport MyMap from './pages/MyMap'\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      {/* <Switch>是唯一的因为它仅仅只会渲染一个路径。相比之下（不使用<Switch>包裹的情况下），每一个被location匹配到的<Route>将都会被渲染。 */}\n      <Switch>\n        <Redirect exact from='/' to='/home' />\n        {/* 这里需要加个exact，不然会出现bug */}\n        <Route path='/home' component={Home} />\n        <Route path='/citylist' component={cityList} />\n        <Route path=\"/map\" component={MyMap} />\n        <Route path='*' component={NotFound} />\n        {/* *是会匹配所以路由所以应该放在最后不然在switch之下就不会渲染到后面的路由 */}\n      </Switch>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n",["78","79"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\cityList\\index.js",[],["80","81"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Home\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\NotFound\\index.js",["82","83","84","85","86","87"],"import React, { Component } from 'react'\r\nimport { HashRouter, BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom'\r\nimport Home from '../Home'\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>404</h3>\r\n\r\n                <Link to='/home'>test</Link>\r\n                <Link to='/home'>test</Link>\r\n                {/* <Route path='/home' component={Home}></Route> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["88","89"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Index\\index.js",["90"],"import React, { Component } from 'react'\r\nimport { Carousel, Flex, Grid, WingBlank } from 'antd-mobile';\r\nimport axios from 'axios'\r\nimport { getCurrentCityInfo } from '../../utils/index'\r\nimport './index.scss'\r\nimport Nav1 from '../../assets/images/nav-1.png'\r\nimport Nav2 from '../../assets/images/nav-2.png'\r\nimport Nav3 from '../../assets/images/nav-3.png'\r\nimport Nav4 from '../../assets/images/nav-4.png'\r\nconst navs = [\r\n    { img: Nav1, title: '整租', 'path': '/home/rent' },\r\n    { img: Nav2, title: '合租', 'path': '/home/rent' },\r\n    { img: Nav3, title: '地图找房', 'path': '/map' },\r\n    { img: Nav4, title: '去出租', 'path': '/rent' },\r\n]\r\nexport default class Index extends Component {\r\n    state = {\r\n        swipers: [],\r\n        gorups: [],\r\n        news: [],\r\n        cityInfo: {}\r\n    }\r\n    componentDidMount() {\r\n        // simulate img loading\r\n        setTimeout(() => {\r\n            this.setState({\r\n                data: ['AiyWuByWklrrUDlFignR', 'TekJlZRVCjLFexlOCuWn', 'IJOtIlfsYdTyaDTRVrLI'],\r\n            });\r\n        }, 100);\r\n\r\n        //请求轮播图数据\r\n        // this.getLocation()\r\n        this.getCityInfo()\r\n        this.getSwiperData()\r\n        this.getGroups()\r\n        this.getNewsData();\r\n\r\n    }\r\n    //获取轮播图 函数 \r\n    async getSwiperData() {\r\n        const res = await axios({\r\n            url: 'http://157.122.54.189:9060/home/swiper'\r\n        })\r\n        // console.log(res);\r\n        this.setState({\r\n            swipers: res.data.body\r\n        })\r\n    }\r\n    async getGroups() {\r\n        const res = await axios.get('http://157.122.54.189:9060/home/groups', { params: { area: 'AREA|88cff55c-aaa4-e2e0' } })\r\n        // console.log(res);\r\n        this.setState({\r\n            gorups: res.data.body\r\n        })\r\n    }\r\n    //获取最新资讯\r\n    async getNewsData() {\r\n        const res = await axios.get(`http://157.122.54.189:9060/home/news`, {\r\n            params: {\r\n                area: 'AREA|88cff55c-aaa4-e2e0'\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            news: res.data.body\r\n        });\r\n    }\r\n    async getCityInfo() {\r\n        const cityInfo = await getCurrentCityInfo();\r\n        this.setState({\r\n            cityInfo\r\n        });\r\n    }\r\n    //获取定位信息\r\n    // getLocation = () => {\r\n    //     var myCity = new window.BMap.LocalCity();\r\n\r\n    //     myCity.get(async (result) => {\r\n\r\n    //         const res = await axios.get(`http://157.122.54.189:9060/area/info`, {\r\n    //             params: {\r\n    //                 name: result.name\r\n    //             }\r\n    //         })\r\n    //         // console.log(res);\r\n    //         this.setState({\r\n    //             cityInfo: res.data.body\r\n    //         })\r\n    //     });\r\n    // }\r\n    //渲染轮播图函数 返回轮播图组件\r\n    renderSwipers() {\r\n        //需要注意的是  一开始数组为空，但是会出现轮播图不会自动切换的bug， 所以需要注意 给一个条件渲染\r\n        return (this.state.swipers.length ? <Carousel\r\n            autoplay={true}\r\n            autoplayInterval={1000}\r\n            infinite\r\n        // dotStyle={{ width: '.633rem', height: \".633rem\" }}\r\n        // beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}\r\n        // afterChange={index => console.log('slide to', index)}\r\n        >\r\n            {this.state.swipers.map(val => (\r\n                <a\r\n                    key={val.id}\r\n                    href=\"http://www.alipay.com\"\r\n                    style={{ display: 'inline-block', width: '100%' }}\r\n                >\r\n                    <img\r\n                        src={`http://157.122.54.189:9060${val.imgSrc}`}\r\n                        alt=\"\"\r\n                        style={{ width: '100%', verticalAlign: 'top' }}\r\n                        onLoad={() => {\r\n                            // fire window resize event to change height\r\n                            window.dispatchEvent(new Event('resize'));\r\n                            // this.setState({ imgHeight: 'auto' });\r\n                        }}\r\n                    />\r\n                </a>\r\n            ))}\r\n        </Carousel> : null)\r\n    }\r\n    //渲染头部搜索栏\r\n    renderSearch = () => {\r\n        return (\r\n            <Flex className='search-box'>\r\n                <Flex className='search'>\r\n                    <div className='location' onClick={() => this.props.history.push('/citylist')}>\r\n                        {this.state.cityInfo.label || '广州'}\r\n                        <i className='iconfont icon-arrow'></i>\r\n                    </div>\r\n                    <div className='form'>\r\n                        <i className='iconfont icon-search'></i>\r\n                        <span>请输入小区或地址</span>\r\n                    </div>\r\n                </Flex>\r\n                <i className='iconfont icon-map' onClick={() => this.props.history.push('/map')}></i>\r\n            </Flex>\r\n        )\r\n    }\r\n    //渲染导航区\r\n    renderNavs() {\r\n        return <Flex className='flex-nav'>\r\n            {navs.map(item => (\r\n                <Flex.Item className='flex-nav-items' key={item.title} onClick={() => this.props.history.push(item.path)}>\r\n                    <img src={item.img} alt=\"nav\" />\r\n                    <h3>{item.title}</h3>\r\n                </Flex.Item>))}\r\n\r\n\r\n        </Flex>\r\n    }\r\n    //渲染\r\n    renderGroup() {\r\n        return (<div className=\"group\">\r\n            <h3 className=\"group-title\">\r\n                租房小组\r\n            <span className=\"more\">更多</span>\r\n            </h3>\r\n            <Grid data={this.state.gorups} columnNum={2} square={false}\r\n                activeStyle={true}\r\n                hasLine={false}\r\n                renderItem={item => {\r\n                    // console.log(item);\r\n                    return (\r\n                        <Flex className='group-item' justify='around' >\r\n                            <div className='desc'>\r\n                                <p className=\"title\">{item.title}</p>\r\n                                <span className=\"info\">{item.desc}</span>\r\n                            </div>\r\n                            <img src={`http://157.122.54.189:9060` + item.imgSrc} />\r\n                        </Flex>)\r\n                }\r\n                } />\r\n        </div>)\r\n    }\r\n    //渲染最新资讯\r\n    renderNews() {\r\n        return (<div className=\"news\">\r\n            <h3 className=\"group-title\">\r\n                最新资讯\r\n        </h3>\r\n            <WingBlank size=\"md\">\r\n                {this.state.news.map((item) => (\r\n                    <div className=\"news-item\" key={item.id}>\r\n                        <div className=\"img-wrap\">\r\n                            <img alt=\"\" src={'http://157.122.54.189:9060' + item.imgSrc} />\r\n                        </div>\r\n                        <Flex className=\"content\" direction=\"column\" justify=\"between\" >\r\n                            <div className=\"title\">{item.title}</div>\r\n                            <Flex className=\"desc\" justify=\"between\">\r\n                                <span>{item.from}</span>\r\n                                <span>{item.date}</span>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </div>\r\n                ))}\r\n            </WingBlank>\r\n\r\n        </div>)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='Index'>\r\n\r\n\r\n                {/* 轮播图 */}\r\n                <div className=\"swiper-area\">\r\n                    {/* 搜索区域 */}\r\n\r\n                    {this.renderSwipers()}\r\n                    {this.renderSearch()}\r\n                </div>\r\n\r\n                <div className=\"navs\">\r\n                    {this.renderNavs()}\r\n                </div>\r\n                {/* 租房 */}\r\n                {this.renderGroup()}\r\n                {this.renderNews()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Profile\\index.js",[],["91","92"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\News\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\MyMap\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\utils\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\NavHeader\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\Filter\\index.js",["93"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\FilterFooter\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterTitle\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterPicker\\index.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":20},{"ruleId":"98","severity":1,"message":"102","line":3,"column":44,"nodeType":"100","messageId":"101","endLine":3,"endColumn":48},{"ruleId":"94","replacedBy":"103"},{"ruleId":"96","replacedBy":"104"},{"ruleId":"94","replacedBy":"105"},{"ruleId":"96","replacedBy":"106"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"98","severity":1,"message":"107","line":2,"column":22,"nodeType":"100","messageId":"101","endLine":2,"endColumn":35},{"ruleId":"98","severity":1,"message":"108","line":2,"column":37,"nodeType":"100","messageId":"101","endLine":2,"endColumn":42},{"ruleId":"98","severity":1,"message":"109","line":2,"column":50,"nodeType":"100","messageId":"101","endLine":2,"endColumn":56},{"ruleId":"98","severity":1,"message":"110","line":2,"column":58,"nodeType":"100","messageId":"101","endLine":2,"endColumn":66},{"ruleId":"98","severity":1,"message":"111","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":12},{"ruleId":"94","replacedBy":"112"},{"ruleId":"96","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":170,"column":29,"nodeType":"116","endLine":170,"endColumn":85},{"ruleId":"94","replacedBy":"117"},{"ruleId":"96","replacedBy":"118"},{"ruleId":"98","severity":1,"message":"119","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":18},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["120"],["121"],["120"],["121"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Home' is defined but never used.",["120"],["121"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["120"],["121"],"'FilterMore' is defined but never used.","no-global-assign","no-unsafe-negation"]