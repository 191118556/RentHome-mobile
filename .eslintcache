[{"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\index.js":"1","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\App.js":"2","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\cityList\\index.js":"3","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Home\\index.js":"4","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\index.js":"5","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\NotFound\\index.js":"6","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Index\\index.js":"7","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Profile\\index.js":"8","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\News\\index.js":"9","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\MyMap\\index.js":"10","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\utils\\index.js":"11","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\NavHeader\\index.js":"12","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\Filter\\index.js":"13","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\FilterFooter\\index.js":"14","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterTitle\\index.js":"15","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterPicker\\index.js":"16","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterMore\\index.js":"17","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\SearchHeader\\index.js":"18","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\utils\\url.js":"19"},{"size":357,"mtime":1608437048057,"results":"20","hashOfConfig":"21"},{"size":1225,"mtime":1608426977438,"results":"22","hashOfConfig":"21"},{"size":6714,"mtime":1608535771441,"results":"23","hashOfConfig":"21"},{"size":2250,"mtime":1608196477627,"results":"24","hashOfConfig":"21"},{"size":946,"mtime":1608827175269,"results":"25","hashOfConfig":"21"},{"size":505,"mtime":1608205894024,"results":"26","hashOfConfig":"21"},{"size":7923,"mtime":1608536230056,"results":"27","hashOfConfig":"21"},{"size":212,"mtime":1608191924155,"results":"28","hashOfConfig":"21"},{"size":212,"mtime":1608191959841,"results":"29","hashOfConfig":"21"},{"size":8155,"mtime":1608824808317,"results":"30","hashOfConfig":"21"},{"size":967,"mtime":1608435240883,"results":"31","hashOfConfig":"21"},{"size":779,"mtime":1608559203409,"results":"32","hashOfConfig":"21"},{"size":5928,"mtime":1608918404642,"results":"33","hashOfConfig":"21"},{"size":897,"mtime":1561599781702,"results":"34","hashOfConfig":"21"},{"size":849,"mtime":1608799198663,"results":"35","hashOfConfig":"21"},{"size":967,"mtime":1608914229190,"results":"36","hashOfConfig":"21"},{"size":2453,"mtime":1608917997743,"results":"37","hashOfConfig":"21"},{"size":894,"mtime":1608826510425,"results":"38","hashOfConfig":"21"},{"size":54,"mtime":1608824608853,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"jd4lc3",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\index.js",[],["88","89"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\App.js",["90","91"],"\n// import { Button } from 'antd-mobile';\nimport { HashRouter, BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom'\n// <Switch>是唯一的因为它仅仅只会渲染一个路径。相比之下（不使用<Switch>包裹的情况下），每一个被location匹配到的<Route>将都会被渲染。\nimport Home from './pages/Home/index'\nimport cityList from './pages/cityList/index'\nimport NotFound from './pages/NotFound'\nimport MyMap from './pages/MyMap'\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      {/* <Switch>是唯一的因为它仅仅只会渲染一个路径。相比之下（不使用<Switch>包裹的情况下），每一个被location匹配到的<Route>将都会被渲染。 */}\n      <Switch>\n        <Redirect exact from='/' to='/home' />\n        {/* 这里需要加个exact，不然会出现bug */}\n        <Route path='/home' component={Home} />\n        <Route path='/citylist' component={cityList} />\n        <Route path=\"/map\" component={MyMap} />\n        <Route path='*' component={NotFound} />\n        {/* *是会匹配所以路由所以应该放在最后不然在switch之下就不会渲染到后面的路由 */}\n      </Switch>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n",["92","93"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\cityList\\index.js",[],["94","95"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Home\\index.js",[],["96","97"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\NotFound\\index.js",["98","99","100","101","102","103"],"import React, { Component } from 'react'\r\nimport { HashRouter, BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom'\r\nimport Home from '../Home'\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>404</h3>\r\n\r\n                <Link to='/home'>test</Link>\r\n                <Link to='/home'>test</Link>\r\n                {/* <Route path='/home' component={Home}></Route> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Index\\index.js",["104"],"import React, { Component } from 'react'\r\nimport { Carousel, Flex, Grid, WingBlank } from 'antd-mobile';\r\nimport axios from 'axios'\r\nimport { getCurrentCityInfo } from '../../utils/index'\r\nimport './index.scss'\r\nimport Nav1 from '../../assets/images/nav-1.png'\r\nimport Nav2 from '../../assets/images/nav-2.png'\r\nimport Nav3 from '../../assets/images/nav-3.png'\r\nimport Nav4 from '../../assets/images/nav-4.png'\r\nconst navs = [\r\n    { img: Nav1, title: '整租', 'path': '/home/rent' },\r\n    { img: Nav2, title: '合租', 'path': '/home/rent' },\r\n    { img: Nav3, title: '地图找房', 'path': '/map' },\r\n    { img: Nav4, title: '去出租', 'path': '/rent' },\r\n]\r\nexport default class Index extends Component {\r\n    state = {\r\n        swipers: [],\r\n        gorups: [],\r\n        news: [],\r\n        cityInfo: {}\r\n    }\r\n    componentDidMount() {\r\n        // simulate img loading\r\n        setTimeout(() => {\r\n            this.setState({\r\n                data: ['AiyWuByWklrrUDlFignR', 'TekJlZRVCjLFexlOCuWn', 'IJOtIlfsYdTyaDTRVrLI'],\r\n            });\r\n        }, 100);\r\n\r\n        //请求轮播图数据\r\n        // this.getLocation()\r\n        this.getCityInfo()\r\n        this.getSwiperData()\r\n        this.getGroups()\r\n        this.getNewsData();\r\n\r\n    }\r\n    //获取轮播图 函数 \r\n    async getSwiperData() {\r\n        const res = await axios({\r\n            url: 'http://157.122.54.189:9060/home/swiper'\r\n        })\r\n        // console.log(res);\r\n        this.setState({\r\n            swipers: res.data.body\r\n        })\r\n    }\r\n    async getGroups() {\r\n        const res = await axios.get('http://157.122.54.189:9060/home/groups', { params: { area: 'AREA|88cff55c-aaa4-e2e0' } })\r\n        // console.log(res);\r\n        this.setState({\r\n            gorups: res.data.body\r\n        })\r\n    }\r\n    //获取最新资讯\r\n    async getNewsData() {\r\n        const res = await axios.get(`http://157.122.54.189:9060/home/news`, {\r\n            params: {\r\n                area: 'AREA|88cff55c-aaa4-e2e0'\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            news: res.data.body\r\n        });\r\n    }\r\n    async getCityInfo() {\r\n        const cityInfo = await getCurrentCityInfo();\r\n        this.setState({\r\n            cityInfo\r\n        });\r\n    }\r\n    //获取定位信息\r\n    // getLocation = () => {\r\n    //     var myCity = new window.BMap.LocalCity();\r\n\r\n    //     myCity.get(async (result) => {\r\n\r\n    //         const res = await axios.get(`http://157.122.54.189:9060/area/info`, {\r\n    //             params: {\r\n    //                 name: result.name\r\n    //             }\r\n    //         })\r\n    //         // console.log(res);\r\n    //         this.setState({\r\n    //             cityInfo: res.data.body\r\n    //         })\r\n    //     });\r\n    // }\r\n    //渲染轮播图函数 返回轮播图组件\r\n    renderSwipers() {\r\n        //需要注意的是  一开始数组为空，但是会出现轮播图不会自动切换的bug， 所以需要注意 给一个条件渲染\r\n        return (this.state.swipers.length ? <Carousel\r\n            autoplay={true}\r\n            autoplayInterval={1000}\r\n            infinite\r\n        // dotStyle={{ width: '.633rem', height: \".633rem\" }}\r\n        // beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}\r\n        // afterChange={index => console.log('slide to', index)}\r\n        >\r\n            {this.state.swipers.map(val => (\r\n                <a\r\n                    key={val.id}\r\n                    href=\"http://www.alipay.com\"\r\n                    style={{ display: 'inline-block', width: '100%' }}\r\n                >\r\n                    <img\r\n                        src={`http://157.122.54.189:9060${val.imgSrc}`}\r\n                        alt=\"\"\r\n                        style={{ width: '100%', verticalAlign: 'top' }}\r\n                        onLoad={() => {\r\n                            // fire window resize event to change height\r\n                            window.dispatchEvent(new Event('resize'));\r\n                            // this.setState({ imgHeight: 'auto' });\r\n                        }}\r\n                    />\r\n                </a>\r\n            ))}\r\n        </Carousel> : null)\r\n    }\r\n    //渲染头部搜索栏\r\n    renderSearch = () => {\r\n        return (\r\n            <Flex className='search-box'>\r\n                <Flex className='search'>\r\n                    <div className='location' onClick={() => this.props.history.push('/citylist')}>\r\n                        {this.state.cityInfo.label || '广州'}\r\n                        <i className='iconfont icon-arrow'></i>\r\n                    </div>\r\n                    <div className='form'>\r\n                        <i className='iconfont icon-search'></i>\r\n                        <span>请输入小区或地址</span>\r\n                    </div>\r\n                </Flex>\r\n                <i className='iconfont icon-map' onClick={() => this.props.history.push('/map')}></i>\r\n            </Flex>\r\n        )\r\n    }\r\n    //渲染导航区\r\n    renderNavs() {\r\n        return <Flex className='flex-nav'>\r\n            {navs.map(item => (\r\n                <Flex.Item className='flex-nav-items' key={item.title} onClick={() => this.props.history.push(item.path)}>\r\n                    <img src={item.img} alt=\"nav\" />\r\n                    <h3>{item.title}</h3>\r\n                </Flex.Item>))}\r\n\r\n\r\n        </Flex>\r\n    }\r\n    //渲染\r\n    renderGroup() {\r\n        return (<div className=\"group\">\r\n            <h3 className=\"group-title\">\r\n                租房小组\r\n            <span className=\"more\">更多</span>\r\n            </h3>\r\n            <Grid data={this.state.gorups} columnNum={2} square={false}\r\n                activeStyle={true}\r\n                hasLine={false}\r\n                renderItem={item => {\r\n                    // console.log(item);\r\n                    return (\r\n                        <Flex className='group-item' justify='around' >\r\n                            <div className='desc'>\r\n                                <p className=\"title\">{item.title}</p>\r\n                                <span className=\"info\">{item.desc}</span>\r\n                            </div>\r\n                            <img src={`http://157.122.54.189:9060` + item.imgSrc} />\r\n                        </Flex>)\r\n                }\r\n                } />\r\n        </div>)\r\n    }\r\n    //渲染最新资讯\r\n    renderNews() {\r\n        return (<div className=\"news\">\r\n            <h3 className=\"group-title\">\r\n                最新资讯\r\n        </h3>\r\n            <WingBlank size=\"md\">\r\n                {this.state.news.map((item) => (\r\n                    <div className=\"news-item\" key={item.id}>\r\n                        <div className=\"img-wrap\">\r\n                            <img alt=\"\" src={'http://157.122.54.189:9060' + item.imgSrc} />\r\n                        </div>\r\n                        <Flex className=\"content\" direction=\"column\" justify=\"between\" >\r\n                            <div className=\"title\">{item.title}</div>\r\n                            <Flex className=\"desc\" justify=\"between\">\r\n                                <span>{item.from}</span>\r\n                                <span>{item.date}</span>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </div>\r\n                ))}\r\n            </WingBlank>\r\n\r\n        </div>)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='Index'>\r\n\r\n\r\n                {/* 轮播图 */}\r\n                <div className=\"swiper-area\">\r\n                    {/* 搜索区域 */}\r\n\r\n                    {this.renderSwipers()}\r\n                    {this.renderSearch()}\r\n                </div>\r\n\r\n                <div className=\"navs\">\r\n                    {this.renderNavs()}\r\n                </div>\r\n                {/* 租房 */}\r\n                {this.renderGroup()}\r\n                {this.renderNews()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Profile\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\News\\index.js",[],["105","106"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\MyMap\\index.js",["107"],"import React, { Component } from 'react'\r\nimport NavHeader from '../../components/NavHeader'\r\nimport axios from 'axios'\r\nimport { Toast } from 'antd-mobile';\r\n// Set  \r\n// Map \r\nimport { getCurrentCityInfo } from '../../utils'\r\nimport styles from './index.module.scss'\r\nimport './index.scss';\r\nimport { BASE_URL } from '../../utils/url'\r\n\r\nexport default class MyMap extends Component {\r\n    state = {\r\n        isShowHouseList: false,\r\n        houseList: []\r\n    }\r\n    async initMap() {\r\n        //获取当前定位城市\r\n        const cityInfo = await getCurrentCityInfo();\r\n        // console.log(cityInfo);\r\n        var map = new window.BMap.Map(\"container\");\r\n        this.map = map\r\n        // 创建地址解析器实例     \r\n        var myGeo = new window.BMap.Geocoder();\r\n        // 将地址解析结果显示在地图上，并调整地图视野\r\n        // 地址解析服务提供从地址转换到经纬度的服务，反之，逆地址解析则提供从经纬度坐标转换到地址的转换功能。\r\n        //Geocoder.getPoint()方法来将一段地址描述转换为一个坐标    \r\n        myGeo.getPoint(cityInfo.label, async (point) => {\r\n\r\n            if (point) {\r\n                // 2. 设置地图的缩放级别为11\r\n\r\n                map.centerAndZoom(point, 11);\r\n                // 3. 添加比例尺和平移缩放控件\r\n                // 添加平移缩放控件\r\n                map.addControl(new window.BMap.NavigationControl());\r\n                // 添加比例尺\r\n                map.addControl(new window.BMap.ScaleControl());\r\n                // console.log(point);\r\n                this.renderOverlays(cityInfo.value)\r\n\r\n\r\n\r\n            }\r\n\r\n        }, cityInfo.label);\r\n        map.addEventListener('dragstart', () => {\r\n\r\n            if (this.state.isShowHouseList) {\r\n                this.setState({\r\n                    isShowHouseList: false\r\n                });\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n    // 发请求  遍历数据 渲染覆盖物\r\n    async renderOverlays(id) {\r\n        //获取当地城市的房源\r\n        Toast.loading('加载中...', 0, null, true)\r\n        let res = await axios.get('http://157.122.54.189:9060/area/map', { params: { id } })\r\n        // console.log(res.data.body);\r\n        const { type, nextZoom } = this.getTypeAndZoom()\r\n        res.data.body.forEach((v, i) => {\r\n            this.createOverlays(v, type, nextZoom)\r\n        })\r\n        Toast.hide()\r\n    }\r\n    // 创建覆盖物\r\n    createOverlays({ coord, count, label, value }, type, nextZoom) {\r\n        //判断当前类型，渲染\r\n        if (type === 'circle') {\r\n            this.createCircle(value, coord.longitude, coord.latitude, label, count, nextZoom)\r\n        } else {\r\n            this.createReact(value, coord.longitude, coord.latitude, label, count)\r\n        }\r\n    }\r\n    // 渲染圆形覆盖物\r\n    createCircle(id, longitude, latitude, name, count, nextZoom) {\r\n        const point = new window.BMap.Point(longitude, latitude)\r\n        var opts = {\r\n            position: point, // 指定文本标注所在的地理位置\r\n            offset: new window.BMap.Size(-35, -35) // 设置文本偏移量\r\n        };\r\n        var label = new window.BMap.Label(`<div class=${styles.bubble} ><p class=\"${styles.name}\">${name}</p>\r\n        <p >${count}套</p></div>`, opts);\r\n        // 自定义文本标注样式\r\n        label.setStyle({\r\n            border: '0px solid rgb(255,0,0)',\r\n            padding: '0px',\r\n        });\r\n        this.map.addOverlay(label);\r\n        label.addEventListener('click', () => {\r\n            // 1. 放大\r\n            this.map.setZoom(nextZoom)\r\n            this.map.panTo(point)\r\n            //解决百度地图Bug\r\n            //清楚原来的覆盖物\r\n            setTimeout(() => {\r\n                this.map.clearOverlays();\r\n            }, 0)\r\n            this.renderOverlays(id)\r\n        })\r\n    }\r\n    // 渲染方形覆盖物\r\n    createReact(id, longitude, latitude, name, count) {\r\n        const point = new window.BMap.Point(longitude, latitude)\r\n        var opts = {\r\n            position: point, // 指定文本标注所在的地理位置\r\n            offset: new window.BMap.Size(-35, -35) // 设置文本偏移量\r\n        };\r\n        var label = new window.BMap.Label(`<div class=${styles.rect} ><p class=\"${styles.houseName}\">${name}</p>\r\n        <p class=${styles.houseNum}>${count}套</p> <i class=${styles.arrow}></i></div>`, opts);\r\n        // 自定义文本标注样式\r\n        label.setStyle({\r\n            border: '0px solid rgb(255,0,0)',\r\n            padding: '0px',\r\n        });\r\n        this.map.addOverlay(label);\r\n        label.addEventListener('click', (e) => {\r\n            const target = e.changedTouches[0];\r\n            this.map.panBy(window.innerWidth / 2 - target.clientX, (window.innerHeight - 330) / 2 - target.clientY)\r\n            // this.setState({ isShowHouseList: true })\r\n            this.getHouseList(id)\r\n        })\r\n    }\r\n    async getHouseList(id) {\r\n\r\n        // 开启loading框\r\n        Toast.loading('加载中...');\r\n        const res = await axios.get(`http://157.122.54.189:9060/houses`, {\r\n            params: {\r\n                cityId: id\r\n            }\r\n        });\r\n        console.log(res.data.body.list);\r\n        // 关闭loading框\r\n        Toast.hide();\r\n\r\n        this.setState({\r\n            houseList: res.data.body.list,\r\n            isShowHouseList: true\r\n        });\r\n\r\n    }\r\n    //点击矩形 渲染房屋信息\r\n    renderHouseList() {\r\n\r\n        return (<div className={`${styles.houselist}   ${this.state.isShowHouseList ? styles.show : ''}`}>\r\n            <div className={styles.title}>\r\n                房屋列表 <span className={styles.more}>更多房源</span>\r\n            </div>\r\n            <div className={styles.houseListContent}>\r\n                {this.state.houseList.map(item => {\r\n                    return <div className={styles.houseItem} key={item.houseCode}>\r\n                        <div className={styles.imgWrap}>\r\n                            <img src={`http://157.122.54.189:9060${item.houseImg}`} alt=\"\" />\r\n                        </div>\r\n\r\n                        <div className={styles.right}>\r\n                            <h3 className={styles.houseTitle}>\r\n                                {item.title}\r\n                            </h3>\r\n                            <div className={styles.housedesc}>\r\n                                {item.desc}\r\n                            </div>\r\n                            <div >\r\n                                {item.tags.map((tag, i) => (\r\n                                    <span key={tag} className={[styles.tags, styles[`tag${(i + 1) % 3}`]].join('   ')}>{tag}</span>\r\n                                ))}\r\n                            </div>\r\n                            <div className={styles.prices}>\r\n                                <span className={styles.priceNum}>{item.price}</span>元/月\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n    getTypeAndZoom() {\r\n        //获取当前zoom层级\r\n        const zoom = this.map.getZoom()\r\n        let type = 'circle'\r\n        let nextZoom = 0;\r\n        if (10 <= zoom && zoom < 12) {\r\n            //最大的一级\r\n            nextZoom = 13\r\n        } else if (12 <= zoom && zoom < 14) {\r\n            //镇和村的级别,下一级的圆形\r\n            nextZoom = 15\r\n        } else if (14 <= zoom && zoom < 16) {\r\n            nextZoom = 16\r\n            type = 'rect'\r\n        }\r\n        return {\r\n            type, nextZoom\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.initMap()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.map}>\r\n                <NavHeader >地图找房</NavHeader>\r\n                <div id=\"container\" className={styles.container}></div>\r\n                {/* <div className={[styles.houseList, this.state.isShowHouseList ? styles.shows : ''].join('&nbsp;')}></div> */}\r\n                {this.renderHouseList()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}",["108","109"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\utils\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\NavHeader\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\Filter\\index.js",["110","111"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\FilterFooter\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterTitle\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterPicker\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\pages\\Rent\\components\\FilterMore\\index.js",["112"],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\components\\SearchHeader\\index.js",[],"E:\\前端上课资料\\上课实操\\React\\hkzf\\src\\utils\\url.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"121","line":3,"column":44,"nodeType":"119","messageId":"120","endLine":3,"endColumn":48},{"ruleId":"113","replacedBy":"122"},{"ruleId":"115","replacedBy":"123"},{"ruleId":"113","replacedBy":"124"},{"ruleId":"115","replacedBy":"125"},{"ruleId":"113","replacedBy":"126"},{"ruleId":"115","replacedBy":"127"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":20},{"ruleId":"117","severity":1,"message":"128","line":2,"column":22,"nodeType":"119","messageId":"120","endLine":2,"endColumn":35},{"ruleId":"117","severity":1,"message":"129","line":2,"column":37,"nodeType":"119","messageId":"120","endLine":2,"endColumn":42},{"ruleId":"117","severity":1,"message":"130","line":2,"column":50,"nodeType":"119","messageId":"120","endLine":2,"endColumn":56},{"ruleId":"117","severity":1,"message":"131","line":2,"column":58,"nodeType":"119","messageId":"120","endLine":2,"endColumn":66},{"ruleId":"117","severity":1,"message":"132","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":12},{"ruleId":"133","severity":1,"message":"134","line":170,"column":29,"nodeType":"135","endLine":170,"endColumn":85},{"ruleId":"113","replacedBy":"136"},{"ruleId":"115","replacedBy":"137"},{"ruleId":"117","severity":1,"message":"138","line":10,"column":10,"nodeType":"119","messageId":"120","endLine":10,"endColumn":18},{"ruleId":"113","replacedBy":"139"},{"ruleId":"115","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":48,"column":81,"nodeType":"143","messageId":"144","endLine":48,"endColumn":83},{"ruleId":"141","severity":1,"message":"142","line":84,"column":73,"nodeType":"143","messageId":"144","endLine":84,"endColumn":75},{"ruleId":"117","severity":1,"message":"145","line":6,"column":7,"nodeType":"119","messageId":"120","endLine":6,"endColumn":16},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["146"],["147"],["146"],["147"],["146"],["147"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Home' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["146"],["147"],"'BASE_URL' is defined but never used.",["146"],["147"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'moreTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]